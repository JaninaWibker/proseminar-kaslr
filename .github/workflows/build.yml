name: Build slides and create action artifact

on: push

permissions:
  contents: write

env:
  OUTPUT_FILE_NAME: kaslr-talk.pdf

jobs:
  build-slides:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install menlo font
        run: |
          # Want to use menlo for code blocks but without including it in the repo itself
          curl -o Menlo.zip https://fontsnetwork.com/download/Menlo-Regular
          unzip Menlo.zip
          rm Menlo.zip
          mkdir -p /usr/share/fonts
          mv 'Menlo Regular/Menlo Regular.ttf' /usr/share/fonts
          rm -rf 'Menlo Regular'
          fc-cache -rfv

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm cache directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "directory=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.directory }}
          key: ${{ runner.os }}-pnpm-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-cache-

      - name: Install dependencies
        run: pnpm install

      - name: Build slides
        run: pnpm build

      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: PDF
          path: "output/${{ env.OUTPUT_FILE_NAME }}"

  build-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: |
            report.tex
            sections/*.tex
          working_directory: report
          glob_root_file: true

      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: PDF
          path: "report/template.pdf"

  release:
    # only create release if a tag starting with v is pushed
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build-slides] # TODO: add build-report once that is working
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: PDF
          path: output
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: "output/${{ env.OUTPUT_FILE_NAME }}"
